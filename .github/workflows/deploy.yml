name: Deploy a new version

on:
  workflow_dispatch:
    inputs:
      version-tag:
        description: Version tag
        required: true
        default: v0.1.0
      dry-run:
        description: Dry run
        type: boolean
        default: false

jobs:
  commit-changelog-and-release:
    uses: deargen/workflows/.github/workflows/commit-changelog-and-release.yml@master
    with:
      version-tag: ${{ github.event.inputs.version-tag }}
      dry-run: ${{ github.event.inputs.dry-run == 'true' }}
      changelog-path: docs/CHANGELOG.md
      exclude-types: build,docs,style,other

  # Below is generated by maturin
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: ubuntu-24.04
            target: x86_64
          - runner: ubuntu-24.04
            target: x86
          - runner: ubuntu-24.04
            target: aarch64
          - runner: ubuntu-24.04
            target: armv7
          - runner: ubuntu-24.04
            target: s390x
          - runner: ubuntu-24.04
            target: ppc64le
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version-tag }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Update version in Cargo.toml
        run: |
          pip3 install toml
          python3 scripts/update_version_in_cargo_toml.py ${{ github.event.inputs.version-tag }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

  windows:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: windows-latest
            target: x64
          - runner: windows-latest
            target: x86
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version-tag }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          architecture: ${{ matrix.platform.target }}
      - name: Update version in Cargo.toml
        run: |
          pip3 install toml
          python3 scripts/update_version_in_cargo_toml.py ${{ github.event.inputs.version-tag }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.platform.target }}
          path: dist

  macos:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      matrix:
        platform:
          - runner: macos-latest
            target: x86_64
          - runner: macos-14
            target: aarch64
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version-tag }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Update version in Cargo.toml
        run: |
          pip3 install toml
          python3 scripts/update_version_in_cargo_toml.py ${{ github.event.inputs.version-tag }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ matrix.platform.target }}
          path: dist

  sdist:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.version-tag }}
      - uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Update version in Cargo.toml
        run: |
          pip3 install toml
          python3 scripts/update_version_in_cargo_toml.py ${{ github.event.inputs.version-tag }}
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    if: ${{ github.event.inputs.dry-run == 'false' }}
    runs-on: ubuntu-24.04
    needs: [linux, windows, macos, sdist, commit-changelog-and-release]
    steps:
      - uses: actions/download-artifact@v4
      - name: Publish to PyPI
        uses: PyO3/maturin-action@v1
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        with:
          command: upload
          args: --non-interactive --skip-existing wheels-*/*
